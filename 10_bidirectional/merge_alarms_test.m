run("init.m");
global model_rank;
global alarm_expand;
model_rank = 4;
alarm_expand = 2;

test_cases = {...
    {...
      "A1";...
      [ 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0];... Detected forward
      [ 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0];... Detected backward
      [ 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0];... Expected
    },...
    {...
      "A2";...
      [ 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0];... Detected forward
      [ 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0];... Detected backward
      [ 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0];... Expected
    },...
        {...
      "A3";...
      [ 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0];... Detected forward
      [ 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0];... Detected backward
      [ 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0];... Expected
    },...
    {...
      "A4";...
      [ 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0];... Detected forward
      [ 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0];... Detected backward
      [ 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0];... Expected 
    },...
    {...
      "A5";...
      [ 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0];... Detected forward
      [ 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0];... Detected backward
      [ 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0];... Expected 
    },...
    {...
      "B1";...
      [ 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0];... Detected forward
      [ 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0];... Detected backward
      [ 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0];... Expected
    },...
    {...
      "B2";...
      [ 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0];... Detected forward
      [ 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0];... Detected backward
      [ 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0];... Expected   
    },...
    {...
      "C1";...
      [ 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0];... Detected forward
      [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];... Detected backward
      [ 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0];... Expected   
    },...
    {...
      "C2";...
      [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];... Detected forward
      [ 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0];... Detected backward
      [ 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0];... Expected    
    },...
    {...
      "D Case 1";...
      [ 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0];... Detected forward
      [ 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0];... Detected backward
      [ 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0];... Expected 
    },...
    {...
      "D Case 2";...
      [ 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0];... Detected forward
      [ 0 0 0 0 0 1 1 1 0 0 0 0 1 1 1 1 0];... Detected backward
      [ 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0];... Expected   
    },...
};

num_cases = size(test_cases,2);
for i=1:num_cases
  test_case = test_cases{i};
  [result] = merge_alarms(test_case{2}, flip(test_case{3}));
  assert_equals(test_case{1}, test_case{4}, result);
endfor

