% Perform Kalman VAR model algorithm with defined detection signal
% Args:
%   @signal                 - 2 Channel input signal
%   @detection              - 2 Channel predefined detection signal
%   @t_start                - Algorithm starting sample
%   @t_end                  - Algorithm end sample
%   @theta                  - EWLS model coefficients
%   @noise_variance         - Noise variance estimated by EWLS algorithm
% Returns;
%   @signal_reconstruction  - Reconstructed signal
function [signal_reconstruction] = VAR_Interpolator( signal,...
                                                     detection,...
                                                     t_start,...
                                                     t_end,...
                                                     theta,...
                                                     noise_variance )
    global model_rank;
    
    covariance_matrix = zeros(2*model_rank, 2*model_rank);
    state_vector = mround(var_init_regression_vector(signal, model_rank, t_start+1));

    for tk=t_start+1:t_end;
      [ theta, ...
        state_vector, ...
        error, ...
        error_covariance, ...
        covariance_matrix ] = var_kalman_step( theta,...
                                               state_vector,...
                                               signal(:,tk),...
                                               covariance_matrix,...
                                               noise_variance );
     
     [ state_vector,...
       covariance_matrix ] = var_kalman_update( detection(:,tk),...
                                                state_vector,...
                                                error,...
                                                error_covariance,...
                                                covariance_matrix );
    endfor

    signal_reconstruction = var_retrieve_reconstruction(state_vector);
endfunction





